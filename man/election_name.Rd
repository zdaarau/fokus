% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fokus.gen.R
\name{election_name}
\alias{election_name}
\title{Get election name}
\usage{
election_name(
  ballot_date = all_ballot_dates,
  lvl = lvls(ballot_date, canton),
  canton = cantons(ballot_date),
  prcd = prcds(ballot_date, lvl, canton),
  election_nr = 1L,
  lang = c("de", "en"),
  type = c("short", "long", "body", "body_alt")
)
}
\arguments{
\item{ballot_date}{FOKUS-covered ballot date. One of
\itemize{
\item \code{"2018-09-23"}
\item \code{"2018-11-25"}
\item \code{"2019-10-20"}
\item \code{"2020-09-27"}
\item \code{"2020-10-18"}
\item \code{"2021-11-28"}
}}

\item{lvl}{Political level \link[=lvls]{covered at} \code{ballot_date} and \code{canton}.}

\item{canton}{Canton name (lowercase) \link[=cantons]{covered at} \code{ballot_date}. Irrelevant if \code{lvl = "federal"} and \code{prcd = "proportional"}.}

\item{prcd}{Election procedure \link[=prcds]{covered at} \code{ballot_date}, \code{lvl} and \code{canton}.}

\item{election_nr}{Election number. A positive integer scalar (in almost all cases \code{1L}).}

\item{lang}{Language. One of
\itemize{
\item \code{"de"}
\item \code{"en"}
}}

\item{type}{Name type. One of
\itemize{
\item \code{"short"}
\item \code{"long"}
\item \code{"body"}
\item \code{"body_alt"}
}}
}
\value{
A character scalar.
}
\description{
Returns the name of the specified election in the specified language.
}
\examples{
fokus::election_name(ballot_date = "2019-10-20",
                     lvl = "cantonal",
                     canton = "aargau",
                     prcd = "majoritarian",
                     election_nr = 1,
                     type = "body")
}
\seealso{
Other election predicate functions:
\code{\link{election_candidate_string}()},
\code{\link{election_candidates}()},
\code{\link{election_names_combined}()},
\code{\link{election_parties}()},
\code{\link{election_tickets}()},
\code{\link{n_election_candidates}()},
\code{\link{n_election_seats}()},
\code{\link{requires_candidate_registration}()}
}
\concept{predicate_election}
